#include <iostream>
#include <string>
#include <bits/stdc++.h>
#include <stack>
#include <queue>

using namespace std;

//  Last update 7:20 PM - Sollestre
//  Last Update 8:16 PM - Misenas

void arr_operations(){
        //  MISENAS

    const int MAX_SIZE = 100;
    int arr[MAX_SIZE];
    int n = 0;
    char arr_choice;

    do {
        cout << endl;
        cout << "Array Operations: " << endl;
        cout << "[1] Insertion" << endl;
        cout << "[2] Deletion" << endl;
        cout << "[3] Traverse" << endl;
        cout << "[4] Search"  << endl;
        cout << "[0] EXIT" << endl;
        cout << "Enter your choice: ";
        cin >> arr_choice;

        switch(arr_choice){
    case '1': // Array Insertion Operation
        if (n == MAX_SIZE){
            cout << "Array is full, cannot insert." << endl;
            system("PAUSE");
            system("CLS");
        } else {
        int arr_index,arr_value;
        cout << "Enter the index to insert: ";
        cin >> arr_index;
        cout << "Enter value to insert: ";
        cin >> arr_value;


        for (int i = n; i>arr_index; i--){
            arr[i] = arr[i - 1];
        }
        arr[arr_index] = arr_value;
        n++;

        cout << "Value inserted successfully." << endl;
        system("PAUSE");
        system("CLS");
    }
    break;
    case '2': // Array Deletion Operation
        if (n == 0){
            cout << "Array is empty, cannot delete." << endl;
            system("PAUSE");
            system("CLS");
        } else {
        int arr_index;
        cout << "Enter the index to delete: ";
        cin >> arr_index;
        for (int i = arr_index; i<n - 1; i++){
            arr[i] = arr[i + 1];
        }
        n--;
        cout << "Value deleted sucessfully." << endl;
        system("PAUSE");
        system("CLS");
    }
    break;
    case '3': // Array Traverse Operation
        if (n == 0){
            cout << "Array is empty." << endl;
            system("PAUSE");
            system("CLS");
        } else {
        cout << "Array contents: ";
        for (int i = 0; i < n; i++){
            cout << arr[i] << " ";
        }
        cout << endl;
        system("PAUSE");
        system("CLS");
    }
        break;
    case '4':
        if (n == 0){
            cout << "Array is empty." << endl;
            system("PAUSE");
            system("CLS");
        } else {
        int arr_value, arr_index =-1;
            cout << "Enter the value to search for: ";
            cin >> arr_value;
        for (int i = 0; i< n; i++){
            if (arr[i] == arr_value){
                arr_index = i;
            }
        }
        if (arr_index == -1){
            cout << "Value not found." << endl;
            system("PAUSE");
            system("CLS");
        } else {
        cout << "Value found at index " << arr_index << "." << endl;
        system("PAUSE");
        system("CLS");
        }
        }
        break;
    case '0':
        break;
    default:
        cout << "Invalid choice / Invalid Input." << endl;
        break;
}

    } while (arr_choice != '0');
}






using namespace std;

int main()
{   char ans1;
    string name;

    cout << "CS 131 - Semestral Project\n\n";
    cout << "Group 1\n\n\n";
    cout << "Enter your Name: ";
    cin >> name;

    cout << "Welcome! " << name <<" " <<endl;
    cout << "Choose from the following Data Structures Techniques:\n" << endl;
    cout << " [A] - Array\n\n [L] - Linked Lists\n\n [S] - Stacks\n\n [Q] - Queues\n\n";
    cout << "Enter: ";
    cin >> ans1;

    switch(ans1){

    case 'a': case 'A':

    cout << name <<"! " << "You have chosen ARRAY.";
    system("PAUSE");
    system("CLS");
    cout << "Welcome to Array Operations " << name << "!" <<  endl;
    arr_operations();






        break;

    case 'L': case 'l':

     cout << name <<"! " << "You have chosen Linked Lists.";


        break;

    case 's': case 'S':

    cout << name <<"! " << "You have chosen Stack.";

    break;

    case 'q': case 'Q':

    cout << name <<"! " << "You have chosen Queue.";

    break;




}

    return 0;
}
